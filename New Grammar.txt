Klein Grammar
CS4550
10/4/13
Jacob Nanke, Anthony Spoerl, Jordan Greiner, Will Schau


<PROGRAM> ::= <DEFINITIONS>
--------------------------------------------------------
<DEFINITIONS   ::= <DEF1>
<DEF1>         ::= <DEF> <DEFINITIONS1>
<DEFINITIONS1> ::= <DEFINITIONS>
		 | EPSILON
--------------------------------------------------------
<DEF> ::= <IDENTIFIER> ( <FORMALS> ) : <TYPE> <BODY>
--------------------------------------------------------
<FORMALS> ::= EPSILON
           | <NONEMPTYFORMALS>
--------------------------------------------------------
 <NONEMPTYFORMALS>  ::= <FORMAL> <NONEMPTYFORMALS1>
 <NONEMPTYFORMALS1> ::= , <NONEMPTYFORMALS>
		     | EPSILON
--------------------------------------------------------
<FORMAL> ::= <IDENTIFIER> : <TYPE>
--------------------------------------------------------
<BODY>  ::= <PRINT> <BODY1>
	  | <EXPR>
<BODY1> ::= <BODY>
--------------------------------------------------------
<TYPE> ::= integer
        | boolean
--------------------------------------------------------
<EXPR>         ::= <SIMPLE-EXPR> <SIMPLE-EXPR1>
<SIMPLE-EXPR1> ::= < <EXPR>
		|  = <EXPR>
		| EPSILON

--------------------------------------------------------
<SIMPLE-EXPR>  ::= <TERM> <TERM2>
<TERM2>        ::= or <SIMPLE-EXPR>
		|  +  <SIMPLE-EXPR>
		|  -  <SIMPLE-EXPR>
		| EPSILON

--------------------------------------------------------
<TERM>    ::= <FACTOR> <TERM1>
<TERM1>	  ::= and <TERM>
	    | *   <TERM>
	    | /   <TERM>
	    |     EPSILON
--------------------------------------------------------
<FACTOR> ::= if <EXPR> then <EXPR> else <EXPR> endif
			| not <FACTOR>
			| <IDENTIFIER1>
			| <LITERAL>
			| -<FACTOR>
			
<IDENTIFIER1> ::= <IDENTIFIER> <ACTUALS1>
<ACTUALS1>    ::= ( <ACTUALS> )
		| EPSILON
--------------------------------------------------------
<ACTUALS> ::= EPSILON
           | <NONEMPTYACTUALS>
--------------------------------------------------------
<NONEMPTYACTUALS>  ::= <EXPR>  <NONEMPTYACTUALS1>
<NONEMPTYACTUALS1> ::= , <NONEMPTYACTUALS>
		     | EPSILON
--------------------------------------------------------
<LITERAL> ::= <NUMBER>
           | <BOOLEAN>
--------------------------------------------------------
<PRINT> ::= print ( <EXPR> )











